---
- name: Ensure target host architecture information is set as a fact
  ansible.builtin.set_fact:
    k3s_arch: "{{ k3s_arch_lookup[ansible_architecture].arch }}"
    k3s_arch_suffix: "{{ k3s_arch_lookup[ansible_architecture].suffix }}"
  check_mode: false

- name: Ensure URLs are set as facts for downloading binaries
  ansible.builtin.set_fact:
    k3s_binary_url: "{{ k3s_github_download_url }}/{{ k3s_release_version }}/k3s{{ k3s_arch_suffix }}"
    k3s_hash_url: "{{ k3s_github_download_url }}/{{ k3s_release_version }}/sha256sum-{{ k3s_arch }}.txt"
  check_mode: false

- name: Override k3s_binary_url and k3s_hash_url facts for testing specific commit
  ansible.builtin.set_fact:
    k3s_binary_url: "https://storage.googleapis.com/k3s-ci-builds/k3s{{ k3s_arch_suffix }}-{{ k3s_release_version }}"
    k3s_hash_url: "https://storage.googleapis.com/k3s-ci-builds/k3s{{ k3s_arch_suffix }}-{{ k3s_release_version }}.sha256sum"
  when:
    - k3s_release_version | regex_search("^[a-z0-9]{40}$")
  check_mode: false

- name: Ensure installation directory exists
  ansible.builtin.file:
    path: "{{ k3s_install_dir }}"
    state: directory
    mode: 0755

- name: Ensure k3s binary is downloaded
  ansible.builtin.get_url:
    url: "{{ k3s_binary_url }}"
    dest: "{{ k3s_install_dir }}/k3s-{{ k3s_release_version }}"
    #checksum: "sha256:{{ k3s_hash_sum }}"
    mode: 0755
    validate_certs: false # Ignore SSL certificate validation if necessary
    http_agent: "ansible-httpget" # Use a custom User-Agent header if required
  become: "{{ k3s_become }}"
  environment:
    http_proxy: "{{ http_proxy }}"
    https_proxy: "{{ https_proxy }}"
    no_proxy: "{{ no_proxy }}"
